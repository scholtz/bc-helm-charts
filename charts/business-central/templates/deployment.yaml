apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "business-central.fullname" . }}
  labels:
    {{- include "business-central.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.updateStrategy }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "business-central.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "business-central.selectorLabels" . | nindent 8 }}
        {{- with .Values.podSelectorLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "business-central.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:  # override to support containerd as well as docker
          - powershell
          - C:\Run\start.ps1
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 22
              protocol: TCP
            - name: web
              containerPort: 80
              protocol: TCP
            - name: webtls
              containerPort: 443
              protocol: TCP
            - name: soap
              containerPort: 7047
              protocol: TCP
            - name: odata
              containerPort: 7048
              protocol: TCP
            - name: dev
              containerPort: 7049
              protocol: TCP
            - name: snap
              containerPort: 7083
              protocol: TCP
            - name: dl
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          {{- if .Values.customScripts }}
          - name: myscripts
            mountPath: C:/Run/my
          {{- end }}
          {{- if .Values.passwordKeySecretName }}
          - name: password-key
            mountPath: C:/Run/my/key
          {{- end }}
          {{- range .Values.volumes }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
          {{- end }}
          livenessProbe:
            exec:
              command:
              - powershell
              - C:\Run\CheckHealth.ps1
            periodSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - powershell
              - C:\Run\CheckHealth.ps1
            periodSeconds: 5
            failureThreshold: 5
          startupProbe:
            exec:
              command:
              - powershell
              - C:\Run\CheckHealth.ps1
            timeoutSeconds: 2
            initialDelaySeconds: 30
            # wait up to 600s for startup
            periodSeconds: 10
            failureThreshold: 60
          env:
            {{- if .Values.image.artifactUrl }}
            - name: ArtifactUrl
              value: "{{ .Values.image.artifactUrl }}"
            {{- end }}
            {{- if .Values.passwordKeySecretName }}
            - name: passwordKeyFile
              value: C:\\run\\my\\key\\passwordKey
            {{- end }}
            {{- if .Values.database.custom }}
            - name: databaseServer
              value: "{{ .Values.database.server }}"
            - name: databaseInstance
              value: "{{ .Values.database.instance }}"
            - name: databaseName
              value: "{{ .Values.database.name }}"
            - name: databaseUserName
              value: "{{ .Values.database.username }}"
            {{- if .Values.database.securePassword }}
            - name: databaseSecurepassword
              valueFrom:
                secretKeyRef:
                  name: {{ include "business-central.fullname" . }}
                  key: dbSecurePassword
            {{- else }}
            - name: databasePassword
              valueFrom:
                secretKeyRef:
                  name: {{ include "business-central.fullname" . }}
                  key: dbPassword
            {{- end }}
            {{- end }}
            {{- if .Values.securePassword }}
            - name: securepassword
              valueFrom:
                secretKeyRef:
                  name: {{ include "business-central.fullname" . }}
                  key: securePassword
            {{- else if not .Values.env.password }}
            - name: password
              valueFrom:
                secretKeyRef:
                  name: {{ include "business-central.fullname" . }}
                  key: password
            {{- end }}
            {{- range $name, $value := .Values.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- if .Values.passwordKeySecretName }}
      - name: password-key
        secret:
          secretName: {{ .Values.passwordKeySecretName }}
      {{- end }}
      {{- if .Values.customScripts }}
      - name: myscripts
        configMap:
          name: {{ include "business-central.fullname" . }}
      {{- end }}
      {{- range .Values.volumes }}
      - name: {{ .name }}
        {{- if .secret }}
        secret: 
          secretName: {{ .secret }}
          items: 
            - key: {{ .secretKey }}
              path: {{ .secretFileName }}
        {{- else }}
        persistentVolumeClaim:
          {{- if .existingClaim }}
          claimName: {{ .existingClaim }}
          {{- else }}
          claimName: {{ include "business-central.fullname" $ }}-{{ .name }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dns.dnsPolicy }}
      dnsPolicy:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dns.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
